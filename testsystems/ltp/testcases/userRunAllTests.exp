#
# Run the basic LTP suite
#
# - check environment: LTP present
# - run LTP
#
# TODO add comment about LTP assumptions, version, already installed etc.
#

global _context_kernel_prompt board_name
global curdate

set p $_context_kernel_prompt

# default ltp testcases to run - this is what ltp assumes as default set
# we may rely on a default suite will pick, but it's better to know such
# explicitly
set LTP_TESTLIST "syscalls,fs,fsx,dio,mm,ipc,sched,nptl,containers"

expect "*"

##
## Get a new bash shell on the target, ignore rc, profile so we have a clean
## output without color formatting and such
##

# First let's kill already spawned noprofile sessions if any...
# There seem to be to consistent way to figure out if session existing
set cmd "pkill -9 -f noprofile"
set res [_context_kernel_command $cmd ".*"]
if !{$res} {
	p_err "error invoking commant on target"
	return 0
}

set cmd "bash --norc --noprofile"
set res [_context_kernel_command $cmd ".*"]
if !{$res} {
	p_err "could not execute a new shell"
	return 0
}

#it is nearly mandatory to have a synced date/time with the host
set cmd "date $curdate"
set res [_context_kernel_command $cmd ".*"]
if !{$res} {
	p_err "could not set current date/time"
	return 0
}

set ltp_dir "/opt/ltp"
p_verb "LTP expected in $ltp_dir"

##
## Check if the LTP is installed
##
set c "ls -d $ltp_dir"
send -s "$c\r"
expect {
	-re ".*$ltp_dir:\\ No\\ such\\ file\\ or\\ directory.*$p" {
		p_err "no LTP directory. Please install the LTP into '$ltp_dir'"
		return 0
	}
	-re ".*$ltp_dir.*$p" { p_verb "LTP dir exists" }
	timeout {
		p_err "timed out waiting for shell prompt"
		return 0
	}
}

##
## cd to the LTP dir
##
set cmd "cd $ltp_dir"
set res [_context_kernel_command $cmd ".*"]
if !{$res} {
	p_err "could not 'cd' to the LTP dir"
	return 0
}


##
## run basic LTP suite
##

# ./runltp -p -l <board_name>.log
# ...
# <<<test_start>>>
# ...
# ...
# <<<test_end>>>
#INFO: pan reported some tests FAIL
#LTP Version: LTP-20061222
#
#       ###############################################################"
#
#            Done executing testcases."
#            result log is in the /tmp/ltp-full-20061222/results directory"
#            LTP Version:  LTP-20061222
#       ###############################################################"
#

# number of LTP execution rounds
set rounds 3

for {set i 1} {$i <= $rounds} {incr i 1} {
	send_user -- "\n>>> LTP round '$i' <<<\n"

	set results_log [format "%s_%02d.log" $board_name $i]

	set c "./runltp -f $LTP_TESTLIST -p -l $results_log"
	send -s "$c\r"
	set timeout 20
	expect {
		timeout {
			p_err "timed out while starting up LTP test suite"
			return 0
		}
		"<<<test_start>>>" {
			p_verb "LTP started OK"
			set timeout 8100
			expect {
				timeout {
					p_err "timed out while waiting for LTP finish"
					return 0
				}
				-re ".*Done\\ executing\\ testcases.*$p" {
					p_verb "LTP round finished"
				}
			}
		}
	}
}
return 1;
