#
# Build U-Boot
#

global BASE_DIR
global UBOOT_GIT_REPO UBOOT_GIT_BRANCH
global BUILD_TARGET BUILD_ARCH BUILD_CROSS
global _context_firmware_image

#here we're extracting repo name - to use as a base dir to checkout stuff
if ![regexp {([^:]+)://(.+)/(.+)}  $UBOOT_GIT_REPO match protocol serv repo] {
	p_err "Incorrect git repo: $UBOOT_GIT_REPO!"
	return 0
}

set duts_ext "_DUTS"
set src $UBOOT_GIT_REPO
set dst "./${repo}${duts_ext}"

###############################
set tools_dir "$BASE_DIR/tools"

##
## get sources
##
if [valid_dir $dst] {
	# seems the specified repo directory is already checked
	# out so don't bother with executing get_src
	p_banner "GIT tree exists, switching to branch $UBOOT_GIT_BRANCH..."

	cd $dst

	set tool_cmd "git checkout "
	set tool_arg "-f $UBOOT_GIT_BRANCH"
	if ![exec2_log "$tool_cmd $tool_arg" err] {
		puts "$err"
		return 0
	}

	p_warn "using already checked out source tree: '$dst'"
	cd ".."
} else {
	##
	## run get_src to check out the kernel tree
	##
	# tools/get_src -r <rev> -s <src> -d <dst>
	set tool_cmd "$tools_dir/get_src"
	set tool_arg "-r $UBOOT_GIT_BRANCH -s $src -d $dst"
	p_verb "executing: '$tool_cmd $tool_arg'"

	p_banner "Checking out U-Boot source tree, please wait - this may take a while..." *
	if ![exec2_log "$tool_cmd $tool_arg" res] {
		puts "$res"
		return 0
	}

	p_banner "U-Boot tree checked out" *
}


##
## build U-Boot
##
global BUILD_TARGET BUILD_ARCH BUILD_CROSS BUILD_TOOLPATH BUILD_UBOOT_TARGET
set src $dst
set dst $_context_firmware_image
set dst_dir [file dirname $dst]
if ![valid_dir $dst_dir 1] {
	p_err "destination dir not accessible: '$dst_dir''"
	return 0
}

##
## run build_image to build the image
##
# -n <board_name> -s <srcdir> -d /tftpboot/<board_name>
# -m <build_tools> -a <build_arch> -c <build_cross>
# -b -o uboot
set tool_cmd "$tools_dir/build_image"
if [ info exists BUILD_UBOOT_TARGET ] {
	set tool_arg "-s $src -d $dst -n $BUILD_UBOOT_TARGET \
		-a $BUILD_ARCH -c $BUILD_CROSS uboot"
} else {
	set tool_arg "-s $src -d $dst -n $BUILD_TARGET \
		-a $BUILD_ARCH -c $BUILD_CROSS uboot"
}

if [file exists $dst] {
	p_warn "destination u-boot image already exists and will be\
		overwritten: '$dst'"
	set tool_arg "-o $tool_arg"
}

p_verb "executing: '$tool_cmd $tool_arg'"

p_banner "Building U-Boot, please wait - this may take a while..." *

if ![exec2_log "$tool_cmd $tool_arg" res] {
	p_err $res
	return 0
}

p_banner "Finished building U-Boot" *
return 1

