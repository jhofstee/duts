#!/bin/env expect
#                                -*- Mode: tcl -*-
#
# (C) Copyright 2006-2008 DENX Software Engineering
#
# Author: Rafal Jaworowski <raj@semihalf.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307 USA
#
#
# This is the main script for the DENX Universal Test System (DUTS)
#

set verbose "no"
set debugging "yes"

##
## Discover base dir
##
set BASE_DIR [file dirname $argv0]

##
## Verify it's a sane DUTS installation
##
set duts_dirs {config devices include testsystems}
set errors 0
foreach dd $duts_dirs {
	set dpath "$BASE_DIR/$dd"
	if [file exists $dpath] {
		if [file isdirectory $dpath] {
			if ![file readable $dpath] {
				puts "ERROR: directory not accessible: '$dpath'"
				set errors 1
			}
		} else {
			puts "ERROR: file exists but is not a directory: '$dpath'"
			set errors 1
		}
	} else {
		puts "ERROR: DUTS directory not found: '$dpath'"
		set errors 1
	}
}
if {$errors} {
	puts "Doesn't look like a valid DUTS installation..."
	exit 1
}
unset errors
unset duts_dirs

##
## include global defines
##
source "$BASE_DIR/include/defs.tcl"

##
## include helper procedures
##
source "$BASE_DIR/include/lib.tcl"
source "$BASE_DIR/include/utils.tcl"
source "$BASE_DIR/include/dev.tcl"
source "$BASE_DIR/include/ui.tcl"
source "$BASE_DIR/include/tc.tcl"
source "$BASE_DIR/include/config.tcl"

##
## initialise global defaults
##
set argc [llength $argv]

# working directory, may be overwritten with user-supplied -d option
set DEFAULT_DIR "$BASE_DIR/testsystems/dulg"
if {[in_array env DUTS_DIR]} {
	if { $env(DUTS_DIR) != "" } {
		set working_dir $env(DUTS_DIR)
	} else {
		set working_dir $DEFAULT_DIR
	}
} else {
	set working_dir $DEFAULT_DIR
}

# global list of testcases
set l_testcases [list]

# associative array for internal representation of all test cases
array set a_testcases ""

# current test case
set cur_tc ""


# global list of test groups
set l_testgroups [list]

array set a_testgroups ""


# global list of selected test cases to execute
set l_runlist [list]

# global list of supported target boards
set l_boards [list]
array set a_devices ""
set cur_device ""

# board name
set board_name ""

# global list of defined configuration views
set l_configs [list]
array set a_configs ""
set cur_config ""
set selected_config ""


# current TC context (state)
set cur_context "off"
set dst_context ""


set connected "no"

set powered_on "no"


# default location for log files
set logs_location $LOG_DIR


set dry_run "no"

# spawn id identifiers for console and control connections
set console_con ""
set control_con ""

##
## let's get going...
##
if { $argc == 0 } {
	usage
}

# increase expect's buffer size
match_max 16384

parse_params
exit
