#
# (C) Copyright 2008, 2009 Detlev Zundel <dzu@denx.de>, DENX Software Engineering
# (C) Copyright 2006, 2007 Rafal Jaworowski <raj@semihalf.com> for DENX Software Engineering
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307 USA
#

#
# implementation of bld_ methods for building U-Boot image
#

proc make_mrproper {} {

	if ![exec2_log "make mrproper" res] {
		p_err "$res"
		return 0
	} else {
		p_verb "make mrproper OK"
	}

	return 1
}

#
# validates environment for U-Boot build:
#
# 1. check environment variables
#
# 2. check obj dir
#   - variable set
#   - exists, writable?
#
# 3. check config file
#
proc bld_valid_env {} {

	global img_name img_src img_dst
	global obj_dir
	global build_tools build_arch build_cross
	global overwrite no_clean
	global env

	## 1. check environment variables

	##
	## set env vars: ARCH, CROSS_COMPILE
	##
	setenv_if_unset ARCH $build_arch
	setenv_if_unset CROSS_COMPILE $build_cross

	## 2. check obj dir

	##
	## validate obj dir
	##  - variable set
	##  - directory exists, writable?
	##

	if {[var_exists obj_dir] && ($obj_dir != "")} {
		# strip trailing slash
		set obj_dir [string trimright $obj_dir "/"]
		if ![valid_dir $obj_dir 1] {
			p_err "Problems accessing obj dir?!"
			return 0
		}

		# set the env variable
		set env(BUILD_DIR) $obj_dir
		p_verb "working with obj dir: '$obj_dir'"
	}


	## 3. check U-Boot config file
	##
	# extract only the core config name if supplied in <name>_config
	# fashion
	set img_name [regsub "_.*config$" $img_name ""]
	p_verb "using U-Boot config: '$img_name'"

	##
	## verify if we can skip configuration steps
	##
	if {$no_clean == "yes"} {
		if [file exists $img_src/include/config.h] {
			p_verb "performing 'no-clean' build, config steps will\
			be skipped"
		} else {
			p_verb "'no-clean' build specified but no\
			include/config.h file found so doing full build\
			anyway..."
			set no_clean "no"
		}
	}

	return 1
}

proc bld_pre {} {
	global build_prompt

	p_banner "make mrproper" #
	return [make_mrproper]
}

proc bld_config {} {

	global img_name

	set c "make $img_name"
	append c "_config"
	p_banner $c #

	if ![exec2_log $c res] {
		p_err "$res"
		return 0
	} else {
		p_verb "make ${img_name}_config OK"
	}

	return 1
}

proc bld_image {} {

	global img_name cur_logfile

	set c "make all"
	p_banner $c #

	if ![exec2_log $c res] {
		p_err "$res"
		return 0
	} else {
		p_verb "make all OK"
	}

	return 1
}

proc bld_post {} {

	global img_dst img_src obj_dir

	##
	## copy image to the desired location
	##
	p_banner "copy image to destination" *

	if {[var_exists obj_dir] && ($obj_dir != "")} {
		set img_file "$obj_dir/u-boot.bin"
	} else {
		set img_file "$img_src/u-boot.bin"
	}

	if {$img_dst == ""} {
		p_verb "no destination location specified, nothing to do.."
	} else {
		p_banner "Copying image to '$img_dst'\n" *
		if ![host_copy $img_file $img_dst] {
			return 0
		}
		p_verb "copied '$img_file' to '$img_dst'"
	}
	return 1
}
